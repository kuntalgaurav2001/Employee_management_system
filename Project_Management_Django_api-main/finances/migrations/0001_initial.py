# Generated by Django 5.1.7 on 2025-07-15 05:31

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('app', '0002_remove_proposals_valid_until_proposals_status'),
        ('peoples', '0021_meeting_scheduled_by'),
    ]

    operations = [
        migrations.CreateModel(
            name='BankAccounts',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_name', models.CharField(max_length=250)),
                ('account_holder_name', models.CharField(max_length=250)),
                ('account_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Only numbers are allowed.', regex='^[0-9]+$')])),
                ('account_type', models.CharField(choices=[('Savings', 'Savings'), ('Current', 'Current')], max_length=20)),
                ('contact_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message='Contact no. is invalid.', regex='^\\+?[0-9\\s\\-()]{7,15}$')])),
                ('branch', models.CharField(max_length=250)),
                ('ifsc_code', models.CharField(max_length=250)),
                ('status', models.CharField(choices=[('Open', 'Open'), ('Close', 'Close')], max_length=15)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Expenses',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=250)),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
                ('purchased_from', models.CharField(max_length=100)),
                ('payment_mode', models.CharField(choices=[('upi', 'upi'), ('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('Cash', 'Cash'), ('Others', 'Others')], max_length=20)),
                ('payment_id', models.CharField(max_length=250)),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='expenses_bank_account', to='finances.bankaccounts')),
                ('purchased_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='purchased_by', to='peoples.employee')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.BigIntegerField()),
                ('payment_mode', models.CharField(choices=[('upi', 'upi'), ('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('Cash', 'Cash'), ('Others', 'Others')], max_length=20)),
                ('payment_id', models.CharField(max_length=250)),
                ('income_date', models.DateField()),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='income_bank_account', to='finances.bankaccounts')),
                ('client_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='income_client_name', to='peoples.client')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='income_project_name', to='app.project')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Invoices',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('invoice_date', models.DateField()),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('Paid', 'Paid'), ('Due', 'Due'), ('Overdue', 'Overdue')], max_length=15)),
                ('subtotal', models.BigIntegerField()),
                ('discount', models.IntegerField()),
                ('gst', models.IntegerField()),
                ('cgst', models.IntegerField()),
                ('vat', models.IntegerField()),
                ('other_tax', models.IntegerField()),
                ('total', models.BigIntegerField()),
                ('payment_method', models.CharField(choices=[('upi', 'upi'), ('Credit Card', 'Credit Card'), ('Debit Card', 'Debit Card'), ('Cash', 'Cash'), ('Others', 'Others')], max_length=20)),
                ('payment_id', models.CharField(max_length=250)),
                ('note', models.TextField()),
                ('generated_by', models.CharField(max_length=250)),
                ('bank_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_bank_account', to='finances.bankaccounts')),
                ('client_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='invoices_client_name', to='peoples.client')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invoices_project_name', to='app.project')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
